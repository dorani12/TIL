# SWEA D3 1220 2024.08.26
# 알고리즘 문제풀이 2 : 마그네틱

'''
[입력] 각 테스트 케이스의 첫 번째 줄에는 정사각형 테이블의 한 변의 길이 = 항상 100
100 x 100크기의 테이블의 초기 모습 => 1은 N극, 2는 S극| 테이블의 윗부분에 N극, 아래부분에 S극

[출력]  자성체들이 서로 충돌하여 테이블 위에 남아있는 교착 상태의 개수를 출력
#############################################################
교착상태가 발생하는 경우는 N극의 자성체가 S극을 만나러 아래로 이동하며, 중간에 S극을 만나서 교착되는 경우 뿐
'''

N_pole = 1                      # 1은 N극 성질을 가지는 자성체를 2는 S극 성질을 가지는 자성체
S_pole = 2                      # 테이블의 윗부분에 N극이 아래부분에 S극이 위치

T = 10
for tc in range(1, T+1):
    N = int(input())
    arr = [list(map(int, input().split())) for _ in range(N)]

    cnt = 0                     # 교착상태 수
    for j in range(100):        # 열 우선
        np = 0                  # 아래로 향하는 N극이 있는지 표시
        for i in range(100):
            if arr[i][j] == N_pole:
                np = 1
            elif arr[i][j] == S_pole and np == 1: # N극과 S극이 만나는 경우 교착
                cnt += 1
                np = 0
    print(f'#{tc} {cnt}')