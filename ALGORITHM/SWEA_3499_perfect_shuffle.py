# SWEA D3 3499 2024.08.26
# 알고리즘 문제풀이 2 : 퍼펙트 셔플

'''
카드 덱을 정확히 절반으로 나누고 나눈 것들에서 교대로 카드를 뽑아 새로운 덱을 만드는 것을 의미
N개의 카드가 있는 덱이 주어질 때 이를 퍼펙트 셔플하면 어떤 순서가 되는지 출력(N이 홀수이면, 교대로 놓을 때 먼저 놓는 쪽에 한 장이 더 들어가게)
[입력] 각 테스트 케이스의 첫 번째 줄에는 자연수 N(1 ≤ N ≤ 1,000) | 두 번째 줄에는 덱에 카드가 놓인 순서대로 N개의 카드 이름 = 알파벳 대문자와 ‘-’만으로 이루어져 있으며, 길이는 80이하

[출력] 각 테스트 케이스마다 주어진 덱을 퍼펙트 셔플한 결과를 한 줄에 카드 이름을 공백으로 구분하여 출력
#############################################################

'''

T = int(input())
for tc in range(1, T+1):
    N = int(input())
    card = input().split()
    deck = [0]*N

    d = (N+1)//2        # 아래 카드 시작, N//2+N%2
    i1 = 0              # 시작 값: 0
    i2 = d              # 시작: 중간 idx
    i3 = 0              # 새로 만들 덱의 인덱스
    while i3 < N:
        if i1 < d:      # 0부터 절반
            deck[i3] = card[i1]
            i1 += 1
            i3 += 1
        if i2 < N:      # 절반 이후의 값
            deck[i3] = card[i2]
            i2 += 1
            i3 += 1

    print(f'#{tc}', *deck)