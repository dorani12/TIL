# SWEA D3 10580 2024.08.26
# 알고리즘 문제풀이 2 : 전봇대

'''
[입력] 첫 번째 줄에 주어지는 전선의 개수 N이 주어진다 (1 ≤ N ≤1000).
이후 N개의 줄에 두 양의 정수 Ai, Bi 가 주어진다. (1 ≤ Ai, Bi ≤ 10000)이는 i번째 전선이, 첫번째 전봇대의 Ai cm 고도에 걸려 있고, 두 번째 전봇대의 Bi cm 고도에 걸려 있음
모든 Ai는 서로 다르고, 모든 Bi 도 서로 다르다. (두 전선의 끝점이 같은 경우가 없기 때문이다.) 세 전선이 한 점에서 만나지 않게 입력이 주어진다.

[출력] 전봇대에는 총 몇 개의 교차점?
#############################################################
이전에 연결된 전선 중에서, 나보다 높은 곳에 연결된 줄이 몇 개인지 카운트
'''

T = int(input())
for tc in range(1, T+1):
    N = int(input())
    ab = [list(map(int, input().split())) for _ in range(N)]

    ab.sort()                               # 오름차순 정렬
    cnt = 0                                 # 교차점 개수
    for i in range(1, N):
        for j in range(i):                  # 내가 연결되기 전에, 연결된 전선들 상태 확인
            if ab[j][1] > ab[i][1]:         # a가 더 아래있지만(오름차순 정렬이여서 i < j) b가 더 높으면(index 1 값) 교차점
                cnt += 1

    print(f'#{tc}', {cnt})